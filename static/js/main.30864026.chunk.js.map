{"version":3,"sources":["../node_modules/node-nlp/lib/sentiment sync","../node_modules/segment-dict/lib/loader sync","../node_modules/novel-segment/lib sync","redux/reducers/index.js","redux/constants/action-types.js","redux/reducers/chat.js","redux/store.js","chattingengine/chat.js","utils/random.js","components/utils/Loading.jsx","components/layout/ConversationBox.jsx","components/layout/Chat.jsx","redux/actions/chat.js","redux/actions/index.js","components/utils/FloatingButton.jsx","App.jsx","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","initialState","showBar","title","size","rootReducer","state","arguments","length","undefined","action","type","Object","assign","showing","require","chatReducer","status","questions","concat","toConsumableArray","from","content","question","slice","answer","waiting","reducers","combineReducers","root","chat","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","applyMiddleware","reduxThunk","store","createStore","NlpManager","data","manager","languages","init","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","train","stop","apply","this","nlpBot","_ref2","_callee2","response","_context2","process","sent","console","log","abrupt","_x","answerInChat","Promise","reject","setTimeout","reply","greetings","Math","floor","random","x","getRandomLoading","BubbleLoading","color","react_default","createElement","react_loading_default","height","width","ConversationBox","props","fromBot","item","Loading","Box","align","alignContent","alignSelf","animation","background","elevation","flex","justify","margin","top","left","right","pad","round","corner","Text","Chat","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loading","_this2","askAQuestion","ask","answering","then","result","setState","Collapsible","direction","open","opacity","fill","gap","Button","icon","Close","onClick","hideSidebar","reverse","statuses","Clock","precision","overflow","InfiniteScroll","items","index","layout_ConversationBox","key","bottom","TextInput","primary","value","onChange","event","target","typing","onKeyDown","disabled","Next","React","Component","connect","ownProps","remote","parentBackground","dispatch","showSidebar","icons_Chat","className","theme","global","colors","brand","chat-background","font","family","updateDeviceSize","react_router_dom","Grommet","full","ResponsiveContext","Consumer","Attraction","label","layout_Chat","utils_FloatingButton","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qzBAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,6MCRA,SAAAT,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,uBCRA,SAAAT,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,mJCDMC,EAAe,CACnBC,SAAS,EACTC,MAAO,kBACPC,KAAM,UA4BOC,EAzBK,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,ICdwB,eDetB,OAAOC,OAAOC,OAAO,GAAIP,EAAO,CAC9BJ,SAAS,IAGb,IClBwB,eDmBtB,OAAOU,OAAOC,OAAO,GAAIP,EAAO,CAC9BJ,SAAS,IAGb,ICtB0B,iBDuBxB,OAAOU,OAAOC,OAAO,GAAIP,EAAO,CAC9BJ,SAAUQ,EAAOI,UAErB,ICzBuB,cD0BrB,OAAOF,OAAOC,OAAO,GAAIP,EAAO,CAC9BF,KAAMM,EAAON,OAEjB,QACE,OAAOE,aE1BPL,EAFOc,EAAQ,KAEI,KAAJ,KAiDNC,EA/CK,WAAkC,IAAjCV,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IDL2B,kBCMzB,OAAOC,OAAOC,OAAO,GAAIP,EAAO,CAC9BW,OAAQP,EAAOO,SAEnB,IDPoB,WCQlB,OAAOL,OAAOC,OAAO,GAAIP,EAAO,CAC9BY,UAAS,GAAAC,OAAAP,OAAAQ,EAAA,EAAAR,CACJN,EAAMY,WADF,CAEP,CACElB,GAAIM,EAAMY,UAAUV,OACpBa,KAAMX,EAAOW,KACbC,QAASZ,EAAOa,cAIxB,IDnBkB,SCoBhB,OAAOX,OAAOC,OAAO,GAAIP,EAAO,CAC9BY,UAAS,GAAAC,OAAAP,OAAAQ,EAAA,EAAAR,CACJN,EAAMY,UAAUM,MAAM,EAAGlB,EAAMY,UAAUV,OAAS,IAD9C,CAEP,CACER,GAAIM,EAAMY,UAAUV,OACpBa,KAAMX,EAAOW,KACbC,QAASZ,EAAOe,UAGpBR,OAAQ,IAEZ,ID7BqB,YC8BnB,OAAOL,OAAOC,OAAO,GAAIP,EAAO,CAC9BY,UAAS,GAAAC,OAAAP,OAAAQ,EAAA,EAAAR,CACJN,EAAMY,WADF,CAEP,CACElB,GAAIM,EAAMY,UAAUV,OACpBa,KAAM,EACNK,SAAS,EACTJ,QAAS,MAGbL,OAAQ,IAEZ,QACE,OAAOX,IChDPqB,EAAWC,YAAgB,CAC/BC,KAAMxB,EACNyB,KAAMd,IAWFe,GAPc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCAAqC,CAC1CC,OAAO,EACPC,WAAY,KAEdC,KAE4BC,YAAgBC,MAInCC,EAFDC,YAAYb,EAAUI,iNCnB5BU,EAAe1B,EAAQ,KAAvB0B,WACFC,EAAO3B,EAAQ,KACf4B,EAAU,IAAIF,EAAW,CAAEG,UAAW,CAAC,QAEvCC,EAAI,eAAAC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAgBLZ,EAAQa,QAhBH,wBAAAH,EAAAI,SAAAN,MAAH,yBAAAL,EAAAY,MAAAC,KAAApD,YAAA,GAoBGqD,EAAM,eAAAC,EAAAjD,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,KAAG,SAAAY,EAAMvC,GAAN,IAAAwC,EAAA,OAAAf,EAAAC,EAAAG,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACdV,IADc,cAAAmB,EAAAT,KAAA,EAEGZ,EAAQsB,QAAQ,KAAM1C,GAFzB,cAEdwC,EAFcC,EAAAE,KAGpBC,QAAQC,IAAIL,GAHQC,EAAAK,OAAA,SAIbN,GAJa,wBAAAC,EAAAP,SAAAK,MAAH,gBAAAQ,GAAA,OAAAT,EAAAH,MAAAC,KAAApD,YAAA,GAONgE,EAAe,SAAAhD,GAC1B,OAAO,IAAIiD,QAAQ,SAAC3E,EAAS4E,GAC3BC,WAAW,WACT,IACE,IAAIC,EACFjC,EAAKkC,UAAUC,KAAKC,MAAMD,KAAKE,SAAWrC,EAAKkC,UAAUpE,SAC3D2D,QAAQC,IAAI,UAAY7C,GACxB1B,EAAQ8E,EAAK,SACb,MAAOlF,GACP0E,QAAQC,IAAI,SAAW7C,GACvBkD,EAAOhF,KC1CiB,WAAc,IAAbuF,EAAazE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,IACnC,OAAOsE,KAAKE,SAAWC,EAAI,ED2CtBC,CAAiB,4BErCTC,EAJO,SAAApC,GAAA,IAAGnC,EAAHmC,EAAGnC,KAAMwE,EAATrC,EAASqC,MAAT,OACpBC,EAAAnC,EAAAoC,cAACC,EAAArC,EAAD,CAActC,KAAMA,EAAMwE,MAAOA,EAAOI,OAAQ,GAAIC,MAAO,MC8B9CC,EA9BS,SAAAC,GACtB,IAAMC,EAA8B,IAApBD,EAAME,KAAKvE,KAE3B,OAAIqE,EAAME,KAAKlE,QACN0D,EAAAnC,EAAAoC,cAACQ,EAAD,CAAkBlF,KAAM,YAG7ByE,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEC,MAAOJ,EAAU,QAAU,MAC3BK,aAAcL,EAAU,QAAU,MAClCM,UAAWN,EAAU,QAAU,MAC/BO,UAAWP,EAAU,SAAW,YAChCQ,WAAYR,EAAU,CAAER,MAAO,UAAa,CAAEA,MAAO,WACrDiB,UAAU,QACVC,MAAM,EACNC,QAASX,EAAU,QAAU,MAC7BY,OAAQ,CACNC,IAAK,SACLC,KAAM,GACNC,MAAO,IAETC,IAAI,QACJC,MAAOjB,EAAU,CAAEkB,OAAQ,SAAY,CAAEA,OAAQ,SAEjDzB,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,CAAM1G,KAAK,SAASsF,EAAME,KAAKtE,WCTjCyF,cACJ,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAApG,OAAAqG,EAAA,EAAArG,CAAA+C,KAAAoD,IACjBC,EAAApG,OAAAsG,EAAA,EAAAtG,CAAA+C,KAAA/C,OAAAuG,EAAA,EAAAvG,CAAAmG,GAAAK,KAAAzD,KAAM+B,KACDpF,MAAQ,CAAEiB,SAAU,GAAI8F,SAAS,GAFrBL,wEAKV,IAAAM,EAAA3D,KACD4D,EAAe,SAAAhG,GACnB+F,EAAK5B,MAAM8B,IAAIjG,GACf+F,EAAK5B,MAAM+B,YACXlD,EAAahD,GAAUmG,KAAK,SAAAC,GAC1BL,EAAK5B,MAAMjE,OAAOkG,GAClBL,EAAKM,SAAS,CAAErG,SAAU,OAE5BqC,EAAOrC,GAAUmG,KAAK,SAAAC,GACpBL,EAAK5B,MAAMjE,OAAOkG,EAAM,WACxBL,EAAKM,SAAS,CAAErG,SAAU,QAG9B,OACE6D,EAAAnC,EAAAoC,cAACwC,EAAA,EAAD,CAAaC,UAAU,aAAaC,KAAMpE,KAAK+B,MAAMxF,SACnDkF,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEO,MAAI,EACJb,MAAO,SACPD,OAAO,QACPQ,MAAM,SACNO,QAAQ,UAERlB,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEK,WAAY,CAAEhB,MAAO,WAAY6C,SAAS,GAC1C1B,QAAQ,QACRC,OAAQ,CACNC,IAAK,SAELC,KAAM,QACNC,MAAO,SAETX,MAAM,QACNC,aAAa,QACbC,UAAU,SACVgC,KAAK,aACL1C,OAAO,QACP2C,IAAI,QACJtB,OAAK,EACLR,UAAU,UAEVhB,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEgC,UAAU,MACV/B,MAAM,SACNC,aAAa,QACbG,WAAW,UACXG,QAAQ,UACRF,UAAU,QACVQ,MAAO,CAAExG,KAAM,SAAUyG,OAAQ,OACjCoB,KAAK,cAEL7C,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CACEC,KAAMhD,EAAAnC,EAAAoC,cAACgD,EAAA,EAAD,CAAOjI,KAAM,UACnBO,KAAM,SACN2H,QAAS,WACPhB,EAAK5B,MAAM6C,eAEbC,SAAS,IAGXpD,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,CAAM1G,KAAK,UACRuD,KAAK+B,MAAM+C,SAAS9E,KAAK+B,MAAMzE,SAElCmE,EAAAnC,EAAAoC,cAACqD,EAAA,EAAD,CACE/H,KAAK,UACLgI,UAAW,UACXvI,KAAM,QACNmG,OAAQ,WAIZnB,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CAAKmC,MAAI,EAACW,SAAS,QACjBxD,EAAAnC,EAAAoC,cAACwD,EAAA,EAAD,CAAgBC,MAAOnF,KAAK+B,MAAMxE,WAC/B,SAAC0E,EAAMmD,GAAP,OAAiB3D,EAAAnC,EAAAoC,cAAC2D,EAAD,CAAiBpD,KAAMA,EAAMqD,IAAKF,OAIxD3D,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEgC,UAAU,MACV/B,MAAM,MACNC,aAAa,QACbG,WAAW,UACXQ,IAAK,CACHF,KACsB,UAApB9C,KAAK+B,MAAMtF,MAAwC,WAApBuD,KAAK+B,MAAMtF,KACtC,SACA,QACNsG,MACsB,UAApB/C,KAAK+B,MAAMtF,MAAwC,WAApBuD,KAAK+B,MAAMtF,KACtC,SACA,QACNoG,IACsB,UAApB7C,KAAK+B,MAAMtF,MAAwC,WAApBuD,KAAK+B,MAAMtF,KACtC,SACA,QACN8I,OAAQ,UAEV9C,UAAU,SACVQ,MAAO,CAAExG,KAAM,SAAUyG,OAAQ,UACjCoB,KAAK,cAEL7C,EAAAnC,EAAAoC,cAAC8D,EAAA,EAAD,CACEC,SAAO,EACPC,MAAO1F,KAAKrD,MAAMiB,SAClB+H,SAAU,SAAAC,GACRjC,EAAKM,SAAS,CAAErG,SAAUgI,EAAMC,OAAOH,QACvC/B,EAAK5B,MAAM+D,UAEbC,UAAW,SAAAH,GACS,UAAdA,EAAMN,KAAyC,IAAtB3B,EAAK5B,MAAMzE,QACtCsG,EAAaD,EAAKhH,MAAMiB,aAK9B6D,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CACEwB,SAAgC,IAAtBhG,KAAK+B,MAAMzE,OACrBmH,KAAMhD,EAAAnC,EAAAoC,cAACuE,EAAA,EAAD,CAAMxJ,KAAM,UAClBgJ,SAAO,EACPzI,KAAM,SACN4F,OAAQ,CAAEE,KAAM,SAChB6B,QAAS,WACPf,EAAaD,EAAKhH,MAAMiB,WAE1BiH,SAAS,GATX,iBAxHKqB,IAAMC,WA6KVC,cAhCU,SAAC9I,EAAQ+I,GAChC,MAAO,CACL/I,OAAQA,EAAOa,KAAKb,OACpBwH,SAAUxH,EAAOa,KAAK2G,SACtBvH,UAAWD,EAAOa,KAAKZ,UACvB+I,OAAQhJ,EAAOa,KAAKmI,OACpB7J,KAAMa,EAAOY,KAAKzB,KAClB8J,iBAAkBF,EAASE,iBAC3BhK,QAASe,EAAOY,KAAK3B,UAIE,SAAAiK,GACzB,MAAO,CACL3C,IAAK,SAAAjG,GACH4I,EC1Ja,SAAC5I,GAClB,MAAO,CACLZ,KRdoB,WQepBY,SAAUA,EACVF,KAJ2Cd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,GD0J1BiH,CAAIjG,KAEfE,OAAQ,SAAAkG,GACNwC,ECtJgB,SAAC1I,GACrB,MAAO,CACLd,KRtBkB,SQuBlBc,OAAQA,EACRJ,KAJ4Cd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,GDsJ3BkB,CAAOkG,KAElBF,UAAW,WACT0C,EChJG,CACLxJ,KR5BqB,eO6KrB8I,OAAQ,WACNU,ECzKG,CACLxJ,KRT2B,kBQU3BM,OAAQ,KDyKRsH,YAAa,WACX4B,EEnLG,CACLxJ,KTRwB,oBO+LboJ,CAGbhD,YGpKagD,cAdU,SAAA9I,GACvB,MAAO,CACLf,QAASe,EAAOY,KAAK3B,UAIE,SAAAiK,GACzB,MAAO,CACLC,YAAa,WACXD,EDZG,CACLxJ,KTbwB,oBU6BboJ,CA1BQ,SAAArE,GAAK,OACzBA,EAAMxF,SACLkF,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CACEC,KAAMhD,EAAAnC,EAAAoC,cAACgF,EAAA,EAAD,MACNjB,SAAO,EACPkB,UAAW,QACXhC,QAAS,WACP5C,EAAM0E,mBCARG,EAAQ,CACZC,OAAQ,CACNC,OAAQ,CACNC,MAAO,UACPC,kBAAmB,WAErBC,KAAM,CACJC,OAAQ,SACRzK,KAAM,OACNmF,OAAQ,UAsGCwE,eACb,KAlGyB,SAAAI,GACzB,MAAO,CACLW,iBAAkB,SAAA1K,GAChB+J,EFH0B,SAAA/J,GAC9B,MAAO,CACLO,KTxBuB,cSyBvBP,KAAMA,GEAK0K,CAAiB1K,OA8FjB2J,CAzFI,SAAArE,GAAK,OACtBN,EAAAnC,EAAAoC,cAAC0F,EAAA,EAAD,KACE3F,EAAAnC,EAAAoC,cAAC2F,EAAA,EAAD,CAAST,MAAOA,EAAOU,MAAI,GACzB7F,EAAAnC,EAAAoC,cAAC6F,EAAA,EAAkBC,SAAnB,KACG,SAAA/K,GAGC,OAFA+D,QAAQC,IAAIhE,GACZsF,EAAMoF,iBAAiB1K,GAErBgF,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CAAKmC,MAAI,EAAC9B,WAAY,CAAEhB,MAAO,WAAY6C,SAAS,IAClD5C,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CAAKO,MAAI,EAACyB,UAAU,MAAMI,IAAK,SAE3B9C,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEO,MAAI,EACJN,MAAM,SACNO,QAAQ,SACR4B,IAAK,QACLJ,UAAW,UAEX1C,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEgC,UAAU,iBACVxB,QAAQ,SACRP,MAAM,SACNmC,IAAK9H,GAELgF,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEa,IAAKvG,EACL2F,MAAM,SACNI,WAAY,CAAEhB,MAAO,UAAW6C,QAAS,UACzCpB,OAAK,EACLsB,IAAI,SAEJ9C,EAAAnC,EAAAoC,cAAC+F,EAAA,EAAD,CAAYhL,KAAMA,IAClBgF,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,cACA1B,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CAAQ/H,KAAMA,EAAMiL,MAAM,SAAS/C,QAAS,gBAE9ClD,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEa,IAAKvG,EACL2F,MAAM,SACNI,WAAY,CAAEhB,MAAO,UAAW6C,QAAS,UACzCpB,OAAK,EACLsB,IAAI,SAEJ9C,EAAAnC,EAAAoC,cAAC+F,EAAA,EAAD,CAAYhL,KAAMA,IAClBgF,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,cACA1B,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CAAQ/H,KAAMA,EAAMiL,MAAM,SAAS/C,QAAS,iBAGhDlD,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEgC,UAAU,iBACVxB,QAAQ,SACRP,MAAM,SACNmC,IAAK9H,GAELgF,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEa,IAAKvG,EACL2F,MAAM,SACNI,WAAY,CAAEhB,MAAO,UAAW6C,QAAS,UACzCpB,OAAK,EACLsB,IAAI,SAEJ9C,EAAAnC,EAAAoC,cAAC+F,EAAA,EAAD,CAAYhL,KAAMA,IAClBgF,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,cACA1B,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CAAQ/H,KAAMA,EAAMiL,MAAM,SAAS/C,QAAS,gBAE9ClD,EAAAnC,EAAAoC,cAACS,EAAA,EAAD,CACEa,IAAKvG,EACL2F,MAAM,SACNI,WAAY,CAAEhB,MAAO,UAAW6C,QAAS,UACzCpB,OAAK,EACLsB,IAAI,SAEJ9C,EAAAnC,EAAAoC,cAAC+F,EAAA,EAAD,CAAYhL,KAAMA,IAClBgF,EAAAnC,EAAAoC,cAACyB,EAAA,EAAD,cACA1B,EAAAnC,EAAAoC,cAAC8C,EAAA,EAAD,CAAQ/H,KAAMA,EAAMiL,MAAM,SAAS/C,QAAS,kBAKpDlD,EAAAnC,EAAAoC,cAACiG,EAAD,MACAlG,EAAAnC,EAAAoC,cAACkG,EAAD,cCrGIC,QACW,cAA7BxJ,OAAOyJ,SAASC,UAEe,UAA7B1J,OAAOyJ,SAASC,UAEhB1J,OAAOyJ,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACPzG,EAAAnC,EAAAoC,cAACyG,EAAA,EAAD,CAAUvJ,MAAOA,GACf6C,EAAAnC,EAAAoC,cAAC0G,GAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.30864026.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 311;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 571;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 578;","import {\n  HIDE_SIDEBAR,\n  TOGGLE_SIDEBAR,\n  SHOW_SIDEBAR,\n  DEVICE_SIZE\n} from \"../constants/action-types\";\n\nconst initialState = {\n  showBar: true,\n  title: \"Tim's Portfolio\",\n  size: \"medium\"\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HIDE_SIDEBAR:\n      return Object.assign({}, state, {\n        showBar: false\n      });\n\n    case SHOW_SIDEBAR:\n      return Object.assign({}, state, {\n        showBar: true\n      });\n\n    case TOGGLE_SIDEBAR:\n      return Object.assign({}, state, {\n        showBar: !action.showing\n      });\n    case DEVICE_SIZE:\n      return Object.assign({}, state, {\n        size: action.size\n      });\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","// root\nexport const HIDE_SIDEBAR = \"HIDE_SIDEBAR\";\nexport const SHOW_SIDEBAR = \"SHOW_SIDEBAR\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport const DEVICE_SIZE = \"DEVICE_SIZE\";\n\n//chatting\nexport const UPDATE_CHATTING = \"UPDATE_CHATTING\";\nexport const ANSWER = \"ANSWER\";\nexport const QUESTION = \"QUESTION\";\nexport const ANSWERING = \"ANSWERING\";\n","import {\n  UPDATE_CHATTING,\n  ANSWER,\n  QUESTION,\n  ANSWERING\n} from \"../constants/action-types\";\nconst data = require(\"../../data/chattingdata.json\"); // use local data as initial state\n\nconst initialState = data[\"init\"][\"chat\"];\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CHATTING:\n      return Object.assign({}, state, {\n        status: action.status\n      });\n    case QUESTION:\n      return Object.assign({}, state, {\n        questions: [\n          ...state.questions,\n          {\n            id: state.questions.length,\n            from: action.from,\n            content: action.question\n          }\n        ]\n      });\n    case ANSWER:\n      return Object.assign({}, state, {\n        questions: [\n          ...state.questions.slice(0, state.questions.length - 1),\n          {\n            id: state.questions.length,\n            from: action.from,\n            content: action.answer\n          }\n        ],\n        status: 0\n      });\n    case ANSWERING:\n      return Object.assign({}, state, {\n        questions: [\n          ...state.questions,\n          {\n            id: state.questions.length,\n            from: 0,\n            waiting: true,\n            content: \"\"\n          }\n        ],\n        status: 1\n      });\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;\n","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport chatReducer from \"./reducers/chat\";\n\nconst reducers = combineReducers({\n  root: rootReducer,\n  chat: chatReducer\n});\nconst composeEnhancers =\n  // set the redux dev tool box\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n        traceLimit: 20\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(reduxThunk));\n\nconst store = createStore(reducers, enhancer);\n\nexport default store;\n","import { getRandomLoading } from \"../utils/random\";\nconst { NlpManager } = require(\"node-nlp\");\nconst data = require(\"../data/chattingdata.json\");\nconst manager = new NlpManager({ languages: [\"en\"] });\n\nconst init = async () => {\n  // manager.addDocument(\"en\", \"goodbye for now\", \"greetings.bye\");\n  // manager.addDocument(\"en\", \"bye bye take care\", \"greetings.bye\");\n  // manager.addDocument(\"en\", \"okay see you later\", \"greetings.bye\");\n  // manager.addDocument(\"en\", \"bye for now\", \"greetings.bye\");\n  // manager.addDocument(\"en\", \"i must go\", \"greetings.bye\");\n  // manager.addDocument(\"en\", \"hello\", \"greetings.hello\");\n  // manager.addDocument(\"en\", \"hi\", \"greetings.hello\");\n  // manager.addDocument(\"en\", \"howdy\", \"greetings.hello\");\n  //\n  // // Train also the NLG\n  // manager.addAnswer(\"en\", \"greetings.bye\", \"Till next time\");\n  // manager.addAnswer(\"en\", \"greetings.bye\", \"see you soon!\");\n  // manager.addAnswer(\"en\", \"greetings.hello\", \"Hey there!\");\n  // manager.addAnswer(\"en\", \"greetings.hello\", \"Greetings!\");\n\n  await manager.train();\n  // manager.save();\n};\n\nexport const nlpBot = async question => {\n  await init();\n  const response = await manager.process(\"en\", question);\n  console.log(response);\n  return response;\n};\n\nexport const answerInChat = question => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      try {\n        let reply =\n          data.greetings[Math.floor(Math.random() * data.greetings.length)];\n        console.log(\"resolve\" + question);\n        resolve(reply[\"content\"]);\n      } catch (e) {\n        console.log(\"reject\" + question);\n        reject(e);\n      }\n    }, getRandomLoading(3800));\n  });\n};\n\nexport const asyncAnswer = async question => {\n  const result = await answerInChat(question).catch(e => {\n    console.log(e);\n  });\n  console.log(result);\n  return result;\n};\n","export const getRandomLoading = (x = 3000) => {\n  return Math.random() * x + 1;\n};\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nconst BubbleLoading = ({ type, color }) => (\n  <ReactLoading type={type} color={color} height={40} width={80} />\n);\n\nexport default BubbleLoading;\n","import React from \"react\";\nimport { Box, Text } from \"grommet\";\nimport LoadingComponent from \"../utils/Loading\";\n\nconst ConversationBox = props => {\n  const fromBot = props.item.from === 0;\n\n  if (props.item.waiting) {\n    return <LoadingComponent type={\"bubbles\"} />;\n  } else {\n    return (\n      <Box\n        align={fromBot ? \"start\" : \"end\"}\n        alignContent={fromBot ? \"start\" : \"end\"}\n        alignSelf={fromBot ? \"start\" : \"end\"}\n        animation={fromBot ? \"fadeIn\" : \"slideLeft\"}\n        background={fromBot ? { color: \"dark-1\" } : { color: \"light-3\" }}\n        elevation=\"small\"\n        flex={false}\n        justify={fromBot ? \"start\" : \"end\"}\n        margin={{\n          top: \"xsmall\",\n          left: \"\",\n          right: \"\"\n        }}\n        pad=\"small\"\n        round={fromBot ? { corner: \"right\" } : { corner: \"left\" }}\n      >\n        <Text size=\"small\">{props.item.content}</Text>\n      </Box>\n    );\n  }\n};\n\nexport default ConversationBox;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  Collapsible,\n  TextInput,\n  InfiniteScroll,\n  Text,\n  Clock\n} from \"grommet\";\nimport { Next, Close } from \"grommet-icons\";\n\nimport { ask, answer, answering, setToTyping } from \"../../redux/actions/chat\";\nimport { hideSidebar } from \"../../redux/actions/index\";\nimport { answerInChat } from \"../../chattingengine/chat\";\nimport { nlpBot } from \"../../chattingengine/chat\";\nimport ConversationBox from \"./ConversationBox\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { question: \"\", loading: false };\n  }\n\n  render() {\n    const askAQuestion = question => {\n      this.props.ask(question);\n      this.props.answering();\n      answerInChat(question).then(result => {\n        this.props.answer(result);\n        this.setState({ question: \"\" });\n      });\n      nlpBot(question).then(result => {\n        this.props.answer(result[\"srcAnswer\"]);\n        this.setState({ question: \"\" });\n      });\n    };\n    return (\n      <Collapsible direction=\"horizontal\" open={this.props.showBar}>\n        <Box\n          flex\n          width={\"medium\"}\n          height=\"large\"\n          align=\"center\"\n          justify=\"center\"\n        >\n          <Box\n            background={{ color: \"accent-3\", opacity: true }}\n            justify=\"start\"\n            margin={{\n              top: \"xsmall\",\n              // bottom: \"medium\",\n              left: \"large\",\n              right: \"large\"\n            }}\n            align=\"start\"\n            alignContent=\"start\"\n            alignSelf=\"center\"\n            fill=\"horizontal\"\n            height=\"large\"\n            gap=\"small\"\n            round\n            elevation=\"medium\"\n          >\n            <Box\n              direction=\"row\"\n              align=\"center\"\n              alignContent=\"start\"\n              background=\"light-2\"\n              justify=\"between\"\n              elevation=\"small\"\n              round={{ size: \"medium\", corner: \"top\" }}\n              fill=\"horizontal\"\n            >\n              <Button\n                icon={<Close size={\"small\"} />}\n                type={\"button\"}\n                onClick={() => {\n                  this.props.hideSidebar();\n                }}\n                reverse={false}\n              />\n\n              <Text size=\"xsmall\">\n                {this.props.statuses[this.props.status]}\n              </Text>\n              <Clock\n                type=\"digital\"\n                precision={\"minutes\"}\n                size={\"small\"}\n                margin={\"small\"}\n              />\n            </Box>\n\n            <Box fill overflow=\"auto\">\n              <InfiniteScroll items={this.props.questions}>\n                {(item, index) => <ConversationBox item={item} key={index} />}\n              </InfiniteScroll>\n            </Box>\n\n            <Box\n              direction=\"row\"\n              align=\"end\"\n              alignContent=\"start\"\n              background=\"light-2\"\n              pad={{\n                left:\n                  this.props.size === \"small\" || this.props.size === \"xsmall\"\n                    ? \"medium\"\n                    : \"small\",\n                right:\n                  this.props.size === \"small\" || this.props.size === \"xsmall\"\n                    ? \"medium\"\n                    : \"small\",\n                top:\n                  this.props.size === \"small\" || this.props.size === \"xsmall\"\n                    ? \"medium\"\n                    : \"small\",\n                bottom: \"xsmall\"\n              }}\n              elevation=\"medium\"\n              round={{ size: \"medium\", corner: \"bottom\" }}\n              fill=\"horizontal\"\n            >\n              <TextInput\n                primary\n                value={this.state.question}\n                onChange={event => {\n                  this.setState({ question: event.target.value });\n                  this.props.typing();\n                }}\n                onKeyDown={event => {\n                  if (event.key === \"Enter\" && this.props.status !== 1) {\n                    askAQuestion(this.state.question);\n                  }\n                }}\n              />\n\n              <Button\n                disabled={this.props.status === 1}\n                icon={<Next size={\"small\"} />}\n                primary\n                type={\"button\"}\n                margin={{ left: \"small\" }}\n                onClick={() => {\n                  askAQuestion(this.state.question);\n                }}\n                reverse={false}\n              >\n                \"\"\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </Collapsible>\n    );\n  }\n}\n\nconst mapStatusToProps = (status, ownProps) => {\n  return {\n    status: status.chat.status,\n    statuses: status.chat.statuses,\n    questions: status.chat.questions,\n    remote: status.chat.remote,\n    size: status.root.size,\n    parentBackground: ownProps.parentBackground,\n    showBar: status.root.showBar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ask: question => {\n      dispatch(ask(question));\n    },\n    answer: result => {\n      dispatch(answer(result));\n    },\n    answering: () => {\n      dispatch(answering());\n    },\n    typing: () => {\n      dispatch(setToTyping());\n    },\n    hideSidebar: () => {\n      dispatch(hideSidebar());\n    }\n  };\n};\n\nexport default connect(\n  mapStatusToProps,\n  mapDispatchToProps\n)(Chat);\n","import {\n  UPDATE_CHATTING,\n  QUESTION,\n  ANSWER,\n  ANSWERING\n} from \"../constants/action-types\";\n\nexport const updateChattingStatus = status => {\n  return {\n    type: UPDATE_CHATTING,\n    status: status\n  };\n};\n\nexport const setToTyping = () => {\n  return {\n    type: UPDATE_CHATTING,\n    status: 2\n  };\n};\n\nexport const ask = (question, fromWhom = 1) => {\n  return {\n    type: QUESTION,\n    question: question,\n    from: fromWhom\n  };\n};\nexport const answer = (answer, fromWhom = 0) => {\n  return {\n    type: ANSWER,\n    answer: answer,\n    from: fromWhom\n  };\n};\n\nexport const answering = () => {\n  return {\n    type: ANSWERING\n  };\n};\n","import {\n  HIDE_SIDEBAR,\n  SHOW_SIDEBAR,\n  TOGGLE_SIDEBAR,\n  DEVICE_SIZE\n} from \"../constants/action-types\";\n\nexport const hideSidebar = () => {\n  return {\n    type: HIDE_SIDEBAR\n  };\n};\n\nexport const showSidebar = () => {\n  return {\n    type: SHOW_SIDEBAR\n  };\n};\n\nexport const toggleSidebar = showing => {\n  return {\n    type: TOGGLE_SIDEBAR,\n    showing: showing\n  };\n};\n\nexport const updateDeviceSize = size => {\n  return {\n    type: DEVICE_SIZE,\n    size: size\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chat } from \"grommet-icons\";\nimport { Button } from \"grommet\";\nimport { showSidebar } from \"../../redux/actions\";\nconst FloatingButton = props =>\n  !props.showBar && (\n    <Button\n      icon={<Chat />}\n      primary\n      className={\"float\"}\n      onClick={() => {\n        props.showSidebar();\n      }}\n    />\n  );\n\nconst mapStatusToProps = status => {\n  return {\n    showBar: status.root.showBar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showSidebar: () => {\n      dispatch(showSidebar());\n    }\n  };\n};\n\nexport default connect(\n  mapStatusToProps,\n  mapDispatchToProps\n)(FloatingButton);\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Box, Grommet, ResponsiveContext, Button, Text } from \"grommet\";\nimport { Attraction } from \"grommet-icons\";\n\nimport \"./App.css\";\n\nimport Chat from \"./components/layout/Chat\";\nimport FloatingButton from \"./components/utils/FloatingButton\";\nimport { updateDeviceSize } from \"./redux/actions/index\";\n\nconst theme = {\n  global: {\n    colors: {\n      brand: \"#228BE6\",\n      \"chat-background\": \"#EBFAF7\"\n    },\n    font: {\n      family: \"Roboto\",\n      size: \"14px\",\n      height: \"20px\"\n    }\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateDeviceSize: size => {\n      dispatch(updateDeviceSize(size));\n    }\n  };\n};\n\nexport const App = props => (\n  <BrowserRouter>\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {size => {\n          console.log(size);\n          props.updateDeviceSize(size);\n          return (\n            <Box fill background={{ color: \"accent-3\", opacity: true }}>\n              <Box flex direction=\"row\" gap={\"small\"}>\n                {\n                  <Box\n                    flex\n                    align=\"center\"\n                    justify=\"center\"\n                    gap={\"small\"}\n                    direction={\"column\"}\n                  >\n                    <Box\n                      direction=\"row-responsive\"\n                      justify=\"center\"\n                      align=\"center\"\n                      gap={size}\n                    >\n                      <Box\n                        pad={size}\n                        align=\"center\"\n                        background={{ color: \"light-2\", opacity: \"strong\" }}\n                        round\n                        gap=\"small\"\n                      >\n                        <Attraction size={size} />\n                        <Text>Party</Text>\n                        <Button size={size} label=\"Button\" onClick={() => {}} />\n                      </Box>\n                      <Box\n                        pad={size}\n                        align=\"center\"\n                        background={{ color: \"light-2\", opacity: \"strong\" }}\n                        round\n                        gap=\"small\"\n                      >\n                        <Attraction size={size} />\n                        <Text>Party</Text>\n                        <Button size={size} label=\"Button\" onClick={() => {}} />\n                      </Box>\n                    </Box>\n                    <Box\n                      direction=\"row-responsive\"\n                      justify=\"center\"\n                      align=\"center\"\n                      gap={size}\n                    >\n                      <Box\n                        pad={size}\n                        align=\"center\"\n                        background={{ color: \"light-2\", opacity: \"strong\" }}\n                        round\n                        gap=\"small\"\n                      >\n                        <Attraction size={size} />\n                        <Text>Party</Text>\n                        <Button size={size} label=\"Button\" onClick={() => {}} />\n                      </Box>\n                      <Box\n                        pad={size}\n                        align=\"center\"\n                        background={{ color: \"light-2\", opacity: \"strong\" }}\n                        round\n                        gap=\"small\"\n                      >\n                        <Attraction size={size} />\n                        <Text>Party</Text>\n                        <Button size={size} label=\"Button\" onClick={() => {}} />\n                      </Box>\n                    </Box>\n                  </Box>\n                }\n                <Chat />\n                <FloatingButton />\n              </Box>\n            </Box>\n          );\n        }}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  </BrowserRouter>\n);\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}